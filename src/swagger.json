{
  "openapi": "3.0.0",
  "info": { "title": "API docs", "version": "1.0.0" },
  "servers": [{ "url": "http://localhost:3000" }],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "required": ["id", "name", "category", "price"],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the product.",
            "example": "dbcc7332-a271-471e-b399-cc3a0dec8574"
          },
          "name": {
            "type": "string",
            "description": "The name of the product.",
            "example": "Monitor 32 inches"
          },
          "category": {
            "type": "string",
            "description": "The category of the product.",
            "example": "Electronics"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "The price of the product.",
            "example": 1500
          }
        }
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Logs the user in and returns a token",
        "description": "Validates the username and returns a token if the user is found.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username of the user trying to log in",
                    "example": "john_doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login with a generated token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The token returned for the authenticated user",
                      "example": "7d9a0068622514c7110e1f0982ec1901"
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Logs the user out by deleting the token",
        "description": "Removes the user's token to log them out",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The token of the user logging out",
                    "example": "7d9a0068622514c7110e1f0982ec1901"
                  }
                }
              }
            }
          }
        },
        "responses": { "204": { "description": "Successful logout" } }
      }
    },
    "/products": {
      "get": {
        "summary": "Retrieves a list of products",
        "description": "If a name query parameter is provided, returns products matching the name. Otherwise, returns all products.",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": { "type": "string" },
            "description": "The name of the product to search for",
            "example": "Laptop"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Product" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new product",
        "description": "Adds a new product to the database. Requires a valid bearer token and \"admin\" role.",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "category", "price"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product.",
                    "example": "Gaming Laptop"
                  },
                  "category": {
                    "type": "string",
                    "description": "The category of the product.",
                    "example": "Electronics"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The price of the product.",
                    "example": 1999.99
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product successfully created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "description": "Unauthorized. Invalid token provided." },
          "403": {
            "description": "Forbidden. User does not have the required role to create a product."
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Retrieves a product by its ID",
        "description": "Returns the details of a single product based on the provided `id`.",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The unique identifier of the product",
            "example": "dbcc7332-a271-471e-b399-cc3a0dec8574"
          }
        ],
        "responses": {
          "200": {
            "description": "A single product",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/Product" },
                    { "type": "null" }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update an existing product",
        "description": "Updates the details of an existing product by ID. Requires a valid bearer token and \"admin\" role.",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the product.",
            "schema": {
              "type": "string",
              "example": "dbcc7332-a271-471e-b399-cc3a0dec8574"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product.",
                    "example": "Updated Gaming Monitor"
                  },
                  "category": {
                    "type": "string",
                    "description": "The category of the product.",
                    "example": "Electronics"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The price of the product.",
                    "example": 1700.99
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product successfully updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "description": "Unauthorized. Invalid token provided." },
          "403": {
            "description": "Forbidden. User does not have the required role to update the product."
          },
          "404": {
            "description": "Not found. Product with the given ID does not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete a product by ID",
        "description": "Deletes a product by its ID. Requires a valid bearer token and \"admin\" role.",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the product to be deleted.",
            "schema": {
              "type": "string",
              "example": "dbcc7332-a271-471e-b399-cc3a0dec8574"
            }
          }
        ],
        "responses": {
          "204": { "description": "Product successfully deleted." },
          "401": { "description": "Unauthorized. Invalid token provided." },
          "403": {
            "description": "Forbidden. User does not have the required role to delete the product."
          },
          "404": {
            "description": "Not found. Product with the given ID does not exist."
          }
        }
      }
    }
  },
  "tags": []
}
